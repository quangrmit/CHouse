mID,fullName,username,password,phoneNumber,hID,credit,o_rating,review
1,Phu,Phu,123,1234578,1,80,10,10_good;10_too good;10_well done
2,Quang,Quang,123,1234578,2,500,-10,-10_bad;-10_too bad;-10_bad
3,Linh,Linh,123,1234578,3,90,100,5_"oke";5_"oke";5_"oke"
4,Nguyen,Nguyen,123,1234578,4,40,0,0_"oke",0_"oke";0_"oke";0_"oke"

hID,description,city,h_rating,start,end,consuming_point,min_o_rating,reviews
1,nice house,HCM,10,12/12/2022,01/01/2023,130,1,10_good;10_excellent
2,not bad house,Hue,0,06/01/2023,10/02/2023,200,8,0_quite bad
3,mid house,Hue,5,,,,,5_nice engouh;5_oke
4,ok house,Hue,7,,,,,7_comfortable house;7_uncomfortable house

rID,uID,hID,start,end,status,complete
1,1,2,07/01/2023,09/02/2023,1,false
2,3,2,07/01/2023,09/02/2023,0,true
3,4,2,06/01/2023,07/01/2023,1,false


Member::Member(string data) {
   std::vector<string> dataList = split(data,',');
   std::vector<string> reviewList = split(dataList[8],';');
   std::vector<std::vector<string>> reviews;

   for(string review : reviewList) {
       reviews.push_back(split(review,'_'));
   }

    Member(dataList[0],dataList[1],dataList[2],dataList[3],dataList[4],dataList[5],std::stoi(dataList[6]), std::stoi(dataList[7]),reviews);

}

Member::Member(const string &mId, const string &fullname, const string &username, const string &password,
               const string &phonenumber, const string &hId, int credit, int occupierRating,
               const vector<std::vector<string>> &review) : mID(mId), fullname(fullname), username(username),
                                                            password(password), phonenumber(phonenumber), hID(hId),
                                                            credit(credit), occupierRating(occupierRating),
                                                            review(review) {};
